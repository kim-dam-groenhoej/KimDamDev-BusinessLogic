//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessLogic.WebsitepanelService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://smbsaas/websitepanel/enterpriseserver", ConfigurationName="WebsitepanelService.esUsersSoap")]
    public interface esUsersSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UserExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UserExists(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UserExists", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UserExistsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BusinessLogic.WebsitepanelService.UserInfo GetUserById(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserById", ReplyAction="*")]
        System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserInfo> GetUserByIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserByUsername", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BusinessLogic.WebsitepanelService.UserInfo GetUserByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserByUsername", ReplyAction="*")]
        System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserInfo> GetUserByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BusinessLogic.WebsitepanelService.UserInfo[] GetUsers(int ownerId, bool recursive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserInfo[]> GetUsersAsync(int ownerId, bool recursive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/AddUserVLan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddUserVLan(int userId, BusinessLogic.WebsitepanelService.UserVlan vLan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/AddUserVLan", ReplyAction="*")]
        System.Threading.Tasks.Task AddUserVLanAsync(int userId, BusinessLogic.WebsitepanelService.UserVlan vLan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/DeleteUserVLan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteUserVLan(int userId, ushort vLanId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/DeleteUserVLan", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteUserVLanAsync(int userId, ushort vLanId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetRawUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRawUsers(int ownerId, bool recursive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetRawUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRawUsersAsync(int ownerId, bool recursive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUsersPaged", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUsersPaged(int userId, string filterColumn, string filterValue, int statusId, int roleId, string sortColumn, int startRow, int maximumRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUsersPaged", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUsersPagedAsync(int userId, string filterColumn, string filterValue, int statusId, int roleId, string sortColumn, int startRow, int maximumRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUsersPagedRecursive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUsersPagedRecursive(int userId, string filterColumn, string filterValue, int statusId, int roleId, string sortColumn, int startRow, int maximumRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUsersPagedRecursive", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUsersPagedRecursiveAsync(int userId, string filterColumn, string filterValue, int statusId, int roleId, string sortColumn, int startRow, int maximumRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUsersSummary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUsersSummary(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUsersSummary", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUsersSummaryAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserDomainsPaged", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetUserDomainsPaged(int userId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserDomainsPaged", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserDomainsPagedAsync(int userId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetRawUserPeers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRawUserPeers(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetRawUserPeers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRawUserPeersAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserPeers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BusinessLogic.WebsitepanelService.UserInfo[] GetUserPeers(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserPeers", ReplyAction="*")]
        System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserInfo[]> GetUserPeersAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserParents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BusinessLogic.WebsitepanelService.UserInfo[] GetUserParents(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserParents", ReplyAction="*")]
        System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserInfo[]> GetUserParentsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/AddUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AddUser(BusinessLogic.WebsitepanelService.UserInfo user, bool sendLetter, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/AddUser", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddUserAsync(BusinessLogic.WebsitepanelService.UserInfo user, bool sendLetter, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/AddUserLiteral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int AddUserLiteral(
                    int ownerId, 
                    int roleId, 
                    int statusId, 
                    bool isPeer, 
                    bool isDemo, 
                    string username, 
                    string password, 
                    string firstName, 
                    string lastName, 
                    string email, 
                    string secondaryEmail, 
                    string address, 
                    string city, 
                    string country, 
                    string state, 
                    string zip, 
                    string primaryPhone, 
                    string secondaryPhone, 
                    string fax, 
                    string instantMessenger, 
                    bool htmlMail, 
                    string companyName, 
                    bool ecommerceEnabled, 
                    bool sendLetter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/AddUserLiteral", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddUserLiteralAsync(
                    int ownerId, 
                    int roleId, 
                    int statusId, 
                    bool isPeer, 
                    bool isDemo, 
                    string username, 
                    string password, 
                    string firstName, 
                    string lastName, 
                    string email, 
                    string secondaryEmail, 
                    string address, 
                    string city, 
                    string country, 
                    string state, 
                    string zip, 
                    string primaryPhone, 
                    string secondaryPhone, 
                    string fax, 
                    string instantMessenger, 
                    bool htmlMail, 
                    string companyName, 
                    bool ecommerceEnabled, 
                    bool sendLetter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UpdateUserTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateUserTask(string taskId, BusinessLogic.WebsitepanelService.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UpdateUserTask", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateUserTaskAsync(string taskId, BusinessLogic.WebsitepanelService.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UpdateUserTaskAsynchronously", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateUserTaskAsynchronously(string taskId, BusinessLogic.WebsitepanelService.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UpdateUserTaskAsynchronously", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateUserTaskAsynchronouslyAsync(string taskId, BusinessLogic.WebsitepanelService.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UpdateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateUser(BusinessLogic.WebsitepanelService.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UpdateUser", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(BusinessLogic.WebsitepanelService.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UpdateUserLiteral", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateUserLiteral(
                    int userId, 
                    int roleId, 
                    int statusId, 
                    bool isPeer, 
                    bool isDemo, 
                    string firstName, 
                    string lastName, 
                    string email, 
                    string secondaryEmail, 
                    string address, 
                    string city, 
                    string country, 
                    string state, 
                    string zip, 
                    string primaryPhone, 
                    string secondaryPhone, 
                    string fax, 
                    string instantMessenger, 
                    bool htmlMail, 
                    string companyName, 
                    bool ecommerceEnabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UpdateUserLiteral", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateUserLiteralAsync(
                    int userId, 
                    int roleId, 
                    int statusId, 
                    bool isPeer, 
                    bool isDemo, 
                    string firstName, 
                    string lastName, 
                    string email, 
                    string secondaryEmail, 
                    string address, 
                    string city, 
                    string country, 
                    string state, 
                    string zip, 
                    string primaryPhone, 
                    string secondaryPhone, 
                    string fax, 
                    string instantMessenger, 
                    bool htmlMail, 
                    string companyName, 
                    bool ecommerceEnabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/DeleteUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int DeleteUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/DeleteUser", ReplyAction="*")]
        System.Threading.Tasks.Task<int> DeleteUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/ChangeUserPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ChangeUserPassword(int userId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/ChangeUserPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ChangeUserPasswordAsync(int userId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/ChangeUserStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int ChangeUserStatus(int userId, BusinessLogic.WebsitepanelService.UserStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/ChangeUserStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<int> ChangeUserStatusAsync(int userId, BusinessLogic.WebsitepanelService.UserStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BusinessLogic.WebsitepanelService.UserSettings GetUserSettings(int userId, string settingsName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/GetUserSettings", ReplyAction="*")]
        System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserSettings> GetUserSettingsAsync(int userId, string settingsName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UpdateUserSettings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateUserSettings(BusinessLogic.WebsitepanelService.UserSettings settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://smbsaas/websitepanel/enterpriseserver/UpdateUserSettings", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateUserSettingsAsync(BusinessLogic.WebsitepanelService.UserSettings settings);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smbsaas/websitepanel/enterpriseserver")]
    public partial class UserInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int roleIdField;
        
        private UserRole roleField;
        
        private int statusIdField;
        
        private UserStatus statusField;
        
        private int loginStatusIdField;
        
        private UserLoginStatus loginStatusField;
        
        private int failedLoginsField;
        
        private int userIdField;
        
        private int ownerIdField;
        
        private bool isPeerField;
        
        private System.DateTime createdField;
        
        private System.DateTime changedField;
        
        private bool isDemoField;
        
        private string commentsField;
        
        private string lastNameField;
        
        private string usernameField;
        
        private string firstNameField;
        
        private string emailField;
        
        private string primaryPhoneField;
        
        private string zipField;
        
        private string instantMessengerField;
        
        private string faxField;
        
        private string secondaryPhoneField;
        
        private string secondaryEmailField;
        
        private string countryField;
        
        private string addressField;
        
        private string cityField;
        
        private string stateField;
        
        private bool htmlMailField;
        
        private string companyNameField;
        
        private bool ecommerceEnabledField;
        
        private string subscriberNumberField;
        
        private string additionalParamsField;
        
        private UserVlan[] vlansField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
                this.RaisePropertyChanged("RoleId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public UserRole Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
                this.RaisePropertyChanged("Role");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int StatusId {
            get {
                return this.statusIdField;
            }
            set {
                this.statusIdField = value;
                this.RaisePropertyChanged("StatusId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public UserStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int LoginStatusId {
            get {
                return this.loginStatusIdField;
            }
            set {
                this.loginStatusIdField = value;
                this.RaisePropertyChanged("LoginStatusId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public UserLoginStatus LoginStatus {
            get {
                return this.loginStatusField;
            }
            set {
                this.loginStatusField = value;
                this.RaisePropertyChanged("LoginStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int FailedLogins {
            get {
                return this.failedLoginsField;
            }
            set {
                this.failedLoginsField = value;
                this.RaisePropertyChanged("FailedLogins");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
                this.RaisePropertyChanged("OwnerId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool IsPeer {
            get {
                return this.isPeerField;
            }
            set {
                this.isPeerField = value;
                this.RaisePropertyChanged("IsPeer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
                this.RaisePropertyChanged("Created");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public System.DateTime Changed {
            get {
                return this.changedField;
            }
            set {
                this.changedField = value;
                this.RaisePropertyChanged("Changed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public bool IsDemo {
            get {
                return this.isDemoField;
            }
            set {
                this.isDemoField = value;
                this.RaisePropertyChanged("IsDemo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
                this.RaisePropertyChanged("Comments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string PrimaryPhone {
            get {
                return this.primaryPhoneField;
            }
            set {
                this.primaryPhoneField = value;
                this.RaisePropertyChanged("PrimaryPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
                this.RaisePropertyChanged("Zip");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string InstantMessenger {
            get {
                return this.instantMessengerField;
            }
            set {
                this.instantMessengerField = value;
                this.RaisePropertyChanged("InstantMessenger");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
                this.RaisePropertyChanged("Fax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string SecondaryPhone {
            get {
                return this.secondaryPhoneField;
            }
            set {
                this.secondaryPhoneField = value;
                this.RaisePropertyChanged("SecondaryPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string SecondaryEmail {
            get {
                return this.secondaryEmailField;
            }
            set {
                this.secondaryEmailField = value;
                this.RaisePropertyChanged("SecondaryEmail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("Country");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public bool HtmlMail {
            get {
                return this.htmlMailField;
            }
            set {
                this.htmlMailField = value;
                this.RaisePropertyChanged("HtmlMail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
                this.RaisePropertyChanged("CompanyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public bool EcommerceEnabled {
            get {
                return this.ecommerceEnabledField;
            }
            set {
                this.ecommerceEnabledField = value;
                this.RaisePropertyChanged("EcommerceEnabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public string SubscriberNumber {
            get {
                return this.subscriberNumberField;
            }
            set {
                this.subscriberNumberField = value;
                this.RaisePropertyChanged("SubscriberNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public string AdditionalParams {
            get {
                return this.additionalParamsField;
            }
            set {
                this.additionalParamsField = value;
                this.RaisePropertyChanged("AdditionalParams");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=33)]
        public UserVlan[] Vlans {
            get {
                return this.vlansField;
            }
            set {
                this.vlansField = value;
                this.RaisePropertyChanged("Vlans");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smbsaas/websitepanel/enterpriseserver")]
    public enum UserRole {
        
        /// <remarks/>
        Administrator,
        
        /// <remarks/>
        Reseller,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        ResellerCSR,
        
        /// <remarks/>
        PlatformCSR,
        
        /// <remarks/>
        ResellerHelpdesk,
        
        /// <remarks/>
        PlatformHelpdesk,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smbsaas/websitepanel/enterpriseserver")]
    public enum UserStatus {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Suspended,
        
        /// <remarks/>
        Cancelled,
        
        /// <remarks/>
        Pending,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smbsaas/websitepanel/enterpriseserver")]
    public enum UserLoginStatus {
        
        /// <remarks/>
        Enabled,
        
        /// <remarks/>
        Disabled,
        
        /// <remarks/>
        LockedOut,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smbsaas/websitepanel/enterpriseserver")]
    public partial class UserVlan : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ushort vLanIDField;
        
        private string commentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ushort VLanID {
            get {
                return this.vLanIDField;
            }
            set {
                this.vLanIDField = value;
                this.RaisePropertyChanged("VLanID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
                this.RaisePropertyChanged("Comment");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://smbsaas/websitepanel/enterpriseserver")]
    public partial class UserSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int userIdField;
        
        private string settingsNameField;
        
        private string[][] settingsArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SettingsName {
            get {
                return this.settingsNameField;
            }
            set {
                this.settingsNameField = value;
                this.RaisePropertyChanged("SettingsName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] SettingsArray {
            get {
                return this.settingsArrayField;
            }
            set {
                this.settingsArrayField = value;
                this.RaisePropertyChanged("SettingsArray");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface esUsersSoapChannel : BusinessLogic.WebsitepanelService.esUsersSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class esUsersSoapClient : System.ServiceModel.ClientBase<BusinessLogic.WebsitepanelService.esUsersSoap>, BusinessLogic.WebsitepanelService.esUsersSoap {
        
        public esUsersSoapClient() {
        }
        
        public esUsersSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public esUsersSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public esUsersSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public esUsersSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UserExists(string username) {
            return base.Channel.UserExists(username);
        }
        
        public System.Threading.Tasks.Task<bool> UserExistsAsync(string username) {
            return base.Channel.UserExistsAsync(username);
        }
        
        public BusinessLogic.WebsitepanelService.UserInfo GetUserById(int userId) {
            return base.Channel.GetUserById(userId);
        }
        
        public System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserInfo> GetUserByIdAsync(int userId) {
            return base.Channel.GetUserByIdAsync(userId);
        }
        
        public BusinessLogic.WebsitepanelService.UserInfo GetUserByUsername(string username) {
            return base.Channel.GetUserByUsername(username);
        }
        
        public System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserInfo> GetUserByUsernameAsync(string username) {
            return base.Channel.GetUserByUsernameAsync(username);
        }
        
        public BusinessLogic.WebsitepanelService.UserInfo[] GetUsers(int ownerId, bool recursive) {
            return base.Channel.GetUsers(ownerId, recursive);
        }
        
        public System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserInfo[]> GetUsersAsync(int ownerId, bool recursive) {
            return base.Channel.GetUsersAsync(ownerId, recursive);
        }
        
        public void AddUserVLan(int userId, BusinessLogic.WebsitepanelService.UserVlan vLan) {
            base.Channel.AddUserVLan(userId, vLan);
        }
        
        public System.Threading.Tasks.Task AddUserVLanAsync(int userId, BusinessLogic.WebsitepanelService.UserVlan vLan) {
            return base.Channel.AddUserVLanAsync(userId, vLan);
        }
        
        public void DeleteUserVLan(int userId, ushort vLanId) {
            base.Channel.DeleteUserVLan(userId, vLanId);
        }
        
        public System.Threading.Tasks.Task DeleteUserVLanAsync(int userId, ushort vLanId) {
            return base.Channel.DeleteUserVLanAsync(userId, vLanId);
        }
        
        public System.Data.DataSet GetRawUsers(int ownerId, bool recursive) {
            return base.Channel.GetRawUsers(ownerId, recursive);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRawUsersAsync(int ownerId, bool recursive) {
            return base.Channel.GetRawUsersAsync(ownerId, recursive);
        }
        
        public System.Data.DataSet GetUsersPaged(int userId, string filterColumn, string filterValue, int statusId, int roleId, string sortColumn, int startRow, int maximumRows) {
            return base.Channel.GetUsersPaged(userId, filterColumn, filterValue, statusId, roleId, sortColumn, startRow, maximumRows);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUsersPagedAsync(int userId, string filterColumn, string filterValue, int statusId, int roleId, string sortColumn, int startRow, int maximumRows) {
            return base.Channel.GetUsersPagedAsync(userId, filterColumn, filterValue, statusId, roleId, sortColumn, startRow, maximumRows);
        }
        
        public System.Data.DataSet GetUsersPagedRecursive(int userId, string filterColumn, string filterValue, int statusId, int roleId, string sortColumn, int startRow, int maximumRows) {
            return base.Channel.GetUsersPagedRecursive(userId, filterColumn, filterValue, statusId, roleId, sortColumn, startRow, maximumRows);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUsersPagedRecursiveAsync(int userId, string filterColumn, string filterValue, int statusId, int roleId, string sortColumn, int startRow, int maximumRows) {
            return base.Channel.GetUsersPagedRecursiveAsync(userId, filterColumn, filterValue, statusId, roleId, sortColumn, startRow, maximumRows);
        }
        
        public System.Data.DataSet GetUsersSummary(int userId) {
            return base.Channel.GetUsersSummary(userId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUsersSummaryAsync(int userId) {
            return base.Channel.GetUsersSummaryAsync(userId);
        }
        
        public System.Data.DataSet GetUserDomainsPaged(int userId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            return base.Channel.GetUserDomainsPaged(userId, filterColumn, filterValue, sortColumn, startRow, maximumRows);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserDomainsPagedAsync(int userId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            return base.Channel.GetUserDomainsPagedAsync(userId, filterColumn, filterValue, sortColumn, startRow, maximumRows);
        }
        
        public System.Data.DataSet GetRawUserPeers(int userId) {
            return base.Channel.GetRawUserPeers(userId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRawUserPeersAsync(int userId) {
            return base.Channel.GetRawUserPeersAsync(userId);
        }
        
        public BusinessLogic.WebsitepanelService.UserInfo[] GetUserPeers(int userId) {
            return base.Channel.GetUserPeers(userId);
        }
        
        public System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserInfo[]> GetUserPeersAsync(int userId) {
            return base.Channel.GetUserPeersAsync(userId);
        }
        
        public BusinessLogic.WebsitepanelService.UserInfo[] GetUserParents(int userId) {
            return base.Channel.GetUserParents(userId);
        }
        
        public System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserInfo[]> GetUserParentsAsync(int userId) {
            return base.Channel.GetUserParentsAsync(userId);
        }
        
        public int AddUser(BusinessLogic.WebsitepanelService.UserInfo user, bool sendLetter, string password) {
            return base.Channel.AddUser(user, sendLetter, password);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(BusinessLogic.WebsitepanelService.UserInfo user, bool sendLetter, string password) {
            return base.Channel.AddUserAsync(user, sendLetter, password);
        }
        
        public int AddUserLiteral(
                    int ownerId, 
                    int roleId, 
                    int statusId, 
                    bool isPeer, 
                    bool isDemo, 
                    string username, 
                    string password, 
                    string firstName, 
                    string lastName, 
                    string email, 
                    string secondaryEmail, 
                    string address, 
                    string city, 
                    string country, 
                    string state, 
                    string zip, 
                    string primaryPhone, 
                    string secondaryPhone, 
                    string fax, 
                    string instantMessenger, 
                    bool htmlMail, 
                    string companyName, 
                    bool ecommerceEnabled, 
                    bool sendLetter) {
            return base.Channel.AddUserLiteral(ownerId, roleId, statusId, isPeer, isDemo, username, password, firstName, lastName, email, secondaryEmail, address, city, country, state, zip, primaryPhone, secondaryPhone, fax, instantMessenger, htmlMail, companyName, ecommerceEnabled, sendLetter);
        }
        
        public System.Threading.Tasks.Task<int> AddUserLiteralAsync(
                    int ownerId, 
                    int roleId, 
                    int statusId, 
                    bool isPeer, 
                    bool isDemo, 
                    string username, 
                    string password, 
                    string firstName, 
                    string lastName, 
                    string email, 
                    string secondaryEmail, 
                    string address, 
                    string city, 
                    string country, 
                    string state, 
                    string zip, 
                    string primaryPhone, 
                    string secondaryPhone, 
                    string fax, 
                    string instantMessenger, 
                    bool htmlMail, 
                    string companyName, 
                    bool ecommerceEnabled, 
                    bool sendLetter) {
            return base.Channel.AddUserLiteralAsync(ownerId, roleId, statusId, isPeer, isDemo, username, password, firstName, lastName, email, secondaryEmail, address, city, country, state, zip, primaryPhone, secondaryPhone, fax, instantMessenger, htmlMail, companyName, ecommerceEnabled, sendLetter);
        }
        
        public int UpdateUserTask(string taskId, BusinessLogic.WebsitepanelService.UserInfo user) {
            return base.Channel.UpdateUserTask(taskId, user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserTaskAsync(string taskId, BusinessLogic.WebsitepanelService.UserInfo user) {
            return base.Channel.UpdateUserTaskAsync(taskId, user);
        }
        
        public int UpdateUserTaskAsynchronously(string taskId, BusinessLogic.WebsitepanelService.UserInfo user) {
            return base.Channel.UpdateUserTaskAsynchronously(taskId, user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserTaskAsynchronouslyAsync(string taskId, BusinessLogic.WebsitepanelService.UserInfo user) {
            return base.Channel.UpdateUserTaskAsynchronouslyAsync(taskId, user);
        }
        
        public int UpdateUser(BusinessLogic.WebsitepanelService.UserInfo user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(BusinessLogic.WebsitepanelService.UserInfo user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public int UpdateUserLiteral(
                    int userId, 
                    int roleId, 
                    int statusId, 
                    bool isPeer, 
                    bool isDemo, 
                    string firstName, 
                    string lastName, 
                    string email, 
                    string secondaryEmail, 
                    string address, 
                    string city, 
                    string country, 
                    string state, 
                    string zip, 
                    string primaryPhone, 
                    string secondaryPhone, 
                    string fax, 
                    string instantMessenger, 
                    bool htmlMail, 
                    string companyName, 
                    bool ecommerceEnabled) {
            return base.Channel.UpdateUserLiteral(userId, roleId, statusId, isPeer, isDemo, firstName, lastName, email, secondaryEmail, address, city, country, state, zip, primaryPhone, secondaryPhone, fax, instantMessenger, htmlMail, companyName, ecommerceEnabled);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserLiteralAsync(
                    int userId, 
                    int roleId, 
                    int statusId, 
                    bool isPeer, 
                    bool isDemo, 
                    string firstName, 
                    string lastName, 
                    string email, 
                    string secondaryEmail, 
                    string address, 
                    string city, 
                    string country, 
                    string state, 
                    string zip, 
                    string primaryPhone, 
                    string secondaryPhone, 
                    string fax, 
                    string instantMessenger, 
                    bool htmlMail, 
                    string companyName, 
                    bool ecommerceEnabled) {
            return base.Channel.UpdateUserLiteralAsync(userId, roleId, statusId, isPeer, isDemo, firstName, lastName, email, secondaryEmail, address, city, country, state, zip, primaryPhone, secondaryPhone, fax, instantMessenger, htmlMail, companyName, ecommerceEnabled);
        }
        
        public int DeleteUser(int userId) {
            return base.Channel.DeleteUser(userId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsync(int userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public int ChangeUserPassword(int userId, string password) {
            return base.Channel.ChangeUserPassword(userId, password);
        }
        
        public System.Threading.Tasks.Task<int> ChangeUserPasswordAsync(int userId, string password) {
            return base.Channel.ChangeUserPasswordAsync(userId, password);
        }
        
        public int ChangeUserStatus(int userId, BusinessLogic.WebsitepanelService.UserStatus status) {
            return base.Channel.ChangeUserStatus(userId, status);
        }
        
        public System.Threading.Tasks.Task<int> ChangeUserStatusAsync(int userId, BusinessLogic.WebsitepanelService.UserStatus status) {
            return base.Channel.ChangeUserStatusAsync(userId, status);
        }
        
        public BusinessLogic.WebsitepanelService.UserSettings GetUserSettings(int userId, string settingsName) {
            return base.Channel.GetUserSettings(userId, settingsName);
        }
        
        public System.Threading.Tasks.Task<BusinessLogic.WebsitepanelService.UserSettings> GetUserSettingsAsync(int userId, string settingsName) {
            return base.Channel.GetUserSettingsAsync(userId, settingsName);
        }
        
        public int UpdateUserSettings(BusinessLogic.WebsitepanelService.UserSettings settings) {
            return base.Channel.UpdateUserSettings(settings);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserSettingsAsync(BusinessLogic.WebsitepanelService.UserSettings settings) {
            return base.Channel.UpdateUserSettingsAsync(settings);
        }
    }
}
